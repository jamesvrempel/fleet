[project]
name = "fleet"
description = "Fleet Management Tools for ERPNext"
authors = [
    { name = "AgriTheory", email = "support@agritheory.com" },
]
readme = "README.md"
license = { file = "license.txt" }
dynamic = [ "version", "dependencies", "requires-python" ]

[project.urls]
homepage = "https://github.com/agritheory/fleet"
source = "https://github.com/agritheory/fleet"
changelog = "https://github.com/agritheory/fleet/CHANGELOG.md"
documentation = "https://github.com/agritheory/fleet/tree/version-15/fleet/docs"
issues = "https://github.com/agritheory/fleet/issues"

[tool.poetry]
requires-poetry = ">=2.0"
version =  "15.1.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = ">=3.10,<3.14"
test_utils = { git = "https://github.com/agritheory/test_utils.git" }

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
pytest-order = "^1.2.1"
mypy = "^1.10.0"

[tool.codespell]
skip = "CHANGELOG.md"

[tool.pytest.ini_options]
addopts = "-s --disable-warnings"

[tool.black]
line-length = 99

[tool.isort]
line_length = 99
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
indent = "\t"

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
version_variables = [
    "fleet/__init__.py:__version__"
]
build_command = "echo 1"

[tool.semantic_release.branches.version]
match = "version-(15|16)"
